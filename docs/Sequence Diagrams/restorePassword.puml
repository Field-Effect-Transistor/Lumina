@startuml restore password sequence

title Процес відновлення пароля (безпечний потік)

actor "Користувач" as user
participant "Клієнтський додаток" as client
participant "API-сервер" as api
participant "Поштовий сервіс" as mail
database "База даних" as db

== Етап 1: Ініціація скидання пароля ==

user -> client: Натискає "Забули пароль?"\nі вводить свій email
activate client

client -> client: Валідація формату email
alt Формат email коректний
    client -> api: POST /api/password/forgot\n{ "email": "..." }
    activate api
    
    api -> db: SELECT user_id FROM Users WHERE email = ?
    activate db
    db --> api: (знайдено user_id або NULL)
    deactivate db
    
    alt Користувача знайдено
        api -> api: Генерує унікальний, нехешований токен
        api -> api: Хешує токен (SHA-256)
        api -> db: INSERT INTO Auth_Tokens (user_id, token_hash, expires_at)
        activate db
        db --> api: OK
        deactivate db
        
        api -> mail: Відправити лист з посиланням:\n"https://app.service.com/reset?token=НЕХЕШОВАНИЙ_ТОКЕН"
    end
    
    api --> client: 200 OK\n{ "message": "Якщо такий email існує, лист відправлено" }
    deactivate api
    
    client --> user: Показати повідомлення про успішну відправку
    
else Формат email некоректний
    client --> user: Помилка: "Введіть коректний email"
end
deactivate client


== Етап 2: Встановлення нового пароля ==

user -> client: Переходить за посиланням з листа,\nвідкривається сторінка скидання пароля

activate client
client -> client: Витягує токен з URL
user -> client: Вводить новий пароль та підтвердження
client -> client: Валідує пароль (довжина, збіг)

alt Пароль валідний
    client -> api: POST /api/password/reset\n{ "token": "...", "password": "..." }
    activate api
    
    api -> api: Хешує отриманий токен
    api -> db: SELECT user_id, expires_at FROM Auth_Tokens WHERE token_hash = ? AND is_used = 0
    activate db
    db --> api: (знайдено запис токена або NULL)
    deactivate db
    
    alt Токен валідний і не застарілий
        api -> api: Генерує новий хеш пароля (Argon2id)
        api -> db: UPDATE Users SET password_hash = ? WHERE id = user_id
        activate db
        db --> api: OK
        deactivate db
        
        api -> db: UPDATE Auth_Tokens SET is_used = 1 WHERE token_hash = ?
        activate db
        db --> api: OK
        deactivate db
        
        api --> client: 200 OK\n{ "message": "Пароль успішно змінено" }
        deactivate api
        
        client --> user: Перенаправляє на сторінку входу\nз повідомленням про успіх
        
    else Токен недійсний або застарілий
        api --> client: 422 Unprocessable Entity\n{ "error": "Недійсний токен" }
        deactivate api
        
        client --> user: Помилка: "Посилання застаріло. Спробуйте ще раз."
    end
    
else Пароль невалідний
    client --> user: Помилка: "Паролі не збігаються або закороткі"
end

deactivate client

@enduml